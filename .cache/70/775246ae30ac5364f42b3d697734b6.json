{"id":"node_modules/yargs/index.js","dependencies":[{"name":"/home/hamster/Learning/Node.js/js-libp2p/examples/libp2p-in-the-browser2/package.json","includedInParent":true,"mtime":1583765270259},{"name":"/home/hamster/Learning/Node.js/js-libp2p/examples/libp2p-in-the-browser2/node_modules/yargs/package.json","includedInParent":true,"mtime":1581949149688},{"name":"./yargs","loc":{"line":5,"column":22},"parent":"/home/hamster/Learning/Node.js/js-libp2p/examples/libp2p-in-the-browser2/node_modules/yargs/index.js","resolved":"/home/hamster/Learning/Node.js/js-libp2p/examples/libp2p-in-the-browser2/node_modules/yargs/yargs.js"},{"name":"process","parent":"/home/hamster/Learning/Node.js/js-libp2p/examples/libp2p-in-the-browser2/node_modules/yargs/index.js","resolved":"/home/hamster/Learning/Node.js/js-libp2p/examples/libp2p-in-the-browser2/node_modules/process/browser.js"}],"generated":{"js":"var process = require(\"process\");\n'use strict'\n// classic singleton yargs API, to use yargs\n// without running as a singleton do:\n// require('yargs/yargs')(process.argv.slice(2))\nconst yargs = require('./yargs')\n\nArgv(process.argv.slice(2))\n\nmodule.exports = Argv\n\nfunction Argv (processArgs, cwd) {\n  const argv = yargs(processArgs, cwd, require)\n  singletonify(argv)\n  return argv\n}\n\n/*  Hack an instance of Argv with process.argv into Argv\n    so people can do\n    require('yargs')(['--beeble=1','-z','zizzle']).argv\n    to parse a list of args and\n    require('yargs').argv\n    to get a parsed version of process.argv.\n*/\nfunction singletonify (inst) {\n  Object.keys(inst).forEach((key) => {\n    if (key === 'argv') {\n      Argv.__defineGetter__(key, inst.__lookupGetter__(key))\n    } else if (typeof inst[key] === 'function') {\n      Argv[key] = inst[key].bind(inst)\n    } else {\n      Argv.__defineGetter__('$0', () => {\n        return inst.$0\n      })\n      Argv.__defineGetter__('parsed', () => {\n        return inst.parsed\n      })\n    }\n  })\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/yargs/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/yargs/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}}],"sources":{"node_modules/yargs/index.js":"'use strict'\n// classic singleton yargs API, to use yargs\n// without running as a singleton do:\n// require('yargs/yargs')(process.argv.slice(2))\nconst yargs = require('./yargs')\n\nArgv(process.argv.slice(2))\n\nmodule.exports = Argv\n\nfunction Argv (processArgs, cwd) {\n  const argv = yargs(processArgs, cwd, require)\n  singletonify(argv)\n  return argv\n}\n\n/*  Hack an instance of Argv with process.argv into Argv\n    so people can do\n    require('yargs')(['--beeble=1','-z','zizzle']).argv\n    to parse a list of args and\n    require('yargs').argv\n    to get a parsed version of process.argv.\n*/\nfunction singletonify (inst) {\n  Object.keys(inst).forEach((key) => {\n    if (key === 'argv') {\n      Argv.__defineGetter__(key, inst.__lookupGetter__(key))\n    } else if (typeof inst[key] === 'function') {\n      Argv[key] = inst[key].bind(inst)\n    } else {\n      Argv.__defineGetter__('$0', () => {\n        return inst.$0\n      })\n      Argv.__defineGetter__('parsed', () => {\n        return inst.parsed\n      })\n    }\n  })\n}\n"},"lineCount":41}},"error":null,"hash":"3af06a5ac18e39cb2f2a054c0ffcfcbe","cacheData":{"env":{}}}