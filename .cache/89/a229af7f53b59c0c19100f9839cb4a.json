{"id":"../../node_modules/it-length-prefixed/src/varint-encode.js","dependencies":[{"name":"/home/hamster/Learning/Node.js/js-libp2p/examples/libp2p-in-the-browser2/package.json","includedInParent":true,"mtime":1583765270259},{"name":"/home/hamster/Learning/Node.js/js-libp2p/node_modules/it-length-prefixed/package.json","includedInParent":true,"mtime":1581949153208},{"name":"varint","loc":{"line":3,"column":23},"parent":"/home/hamster/Learning/Node.js/js-libp2p/node_modules/it-length-prefixed/src/varint-encode.js","resolved":"/home/hamster/Learning/Node.js/js-libp2p/node_modules/varint/index.js"},{"name":"buffer","loc":{"line":4,"column":27},"parent":"/home/hamster/Learning/Node.js/js-libp2p/node_modules/it-length-prefixed/src/varint-encode.js","resolved":"/home/hamster/Learning/Node.js/js-libp2p/examples/libp2p-in-the-browser2/node_modules/node-libs-browser/node_modules/buffer/index.js"}],"generated":{"js":"\n'use strict'\n\nconst Varint = require('varint')\nconst { Buffer } = require('buffer')\n\n// Encode the passed length `value` to the `target` buffer at the given `offset`\nconst varintEncode = (value, target, offset) => {\n  const ret = Varint.encode(value, target, offset)\n  varintEncode.bytes = Varint.encode.bytes\n  // If no target, create Buffer from returned array\n  return target || Buffer.from(ret)\n}\n\nmodule.exports = varintEncode\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/it-length-prefixed/src/varint-encode.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/it-length-prefixed/src/varint-encode.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/it-length-prefixed/src/varint-encode.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/it-length-prefixed/src/varint-encode.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/it-length-prefixed/src/varint-encode.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/it-length-prefixed/src/varint-encode.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/it-length-prefixed/src/varint-encode.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/it-length-prefixed/src/varint-encode.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/it-length-prefixed/src/varint-encode.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/it-length-prefixed/src/varint-encode.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/it-length-prefixed/src/varint-encode.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/it-length-prefixed/src/varint-encode.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/it-length-prefixed/src/varint-encode.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/it-length-prefixed/src/varint-encode.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/it-length-prefixed/src/varint-encode.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}}],"sources":{"../../node_modules/it-length-prefixed/src/varint-encode.js":"'use strict'\n\nconst Varint = require('varint')\nconst { Buffer } = require('buffer')\n\n// Encode the passed length `value` to the `target` buffer at the given `offset`\nconst varintEncode = (value, target, offset) => {\n  const ret = Varint.encode(value, target, offset)\n  varintEncode.bytes = Varint.encode.bytes\n  // If no target, create Buffer from returned array\n  return target || Buffer.from(ret)\n}\n\nmodule.exports = varintEncode\n"},"lineCount":16}},"error":null,"hash":"bdc230a823b0e7318a4eca02a9c8511a","cacheData":{"env":{}}}