{"id":"node_modules/stream-to-it/sink.js","dependencies":[{"name":"/home/hamster/Learning/Node.js/js-libp2p/examples/libp2p-in-the-browser2/package.json","includedInParent":true,"mtime":1583765270259},{"name":"/home/hamster/Learning/Node.js/js-libp2p/examples/libp2p-in-the-browser2/node_modules/stream-to-it/package.json","includedInParent":true,"mtime":1581949150988},{"name":"get-iterator","loc":{"line":1,"column":28},"parent":"/home/hamster/Learning/Node.js/js-libp2p/examples/libp2p-in-the-browser2/node_modules/stream-to-it/sink.js","resolved":"/home/hamster/Learning/Node.js/js-libp2p/examples/libp2p-in-the-browser2/node_modules/get-iterator/index.js"},{"name":"p-defer","loc":{"line":2,"column":22},"parent":"/home/hamster/Learning/Node.js/js-libp2p/examples/libp2p-in-the-browser2/node_modules/stream-to-it/sink.js","resolved":"/home/hamster/Learning/Node.js/js-libp2p/examples/libp2p-in-the-browser2/node_modules/p-defer/index.js"}],"generated":{"js":"const getIterator = require('get-iterator')\nconst defer = require('p-defer')\n\nmodule.exports = writable => async source => {\n  source = getIterator(source)\n\n  const errPromise = defer()\n  const closePromise = defer()\n  const endingPromise = defer()\n  const finishPromise = defer()\n  let drainPromise\n\n  const errorHandler = err => errPromise.reject(err)\n  const closeHandler = () => closePromise.resolve({ closed: true })\n  const finishHandler = () => finishPromise.resolve({ finished: true })\n  const drainHandler = () => {\n    if (drainPromise) drainPromise.resolve({ drained: true })\n  }\n\n  // There's no event to determine the start of a call to .end()\n  const _end = writable.end.bind(writable)\n  writable.end = (...args) => {\n    endingPromise.resolve({ ending: true })\n    return _end(...args)\n  }\n\n  writable\n    .on('error', errorHandler)\n    .on('close', closeHandler)\n    .on('finish', finishHandler)\n    .on('drain', drainHandler)\n\n  const getNext = async () => {\n    try {\n      return source.next()\n    } catch (err) {\n      writable.destroy(err)\n      return errPromise.promise\n    }\n  }\n\n  try {\n    while (true) {\n      // Race the iterator and the error, close and finish listener\n      const result = await Promise.race([\n        errPromise.promise,\n        closePromise.promise,\n        endingPromise.promise,\n        finishPromise.promise,\n        getNext()\n      ])\n\n      if (result.closed || result.finished) {\n        break\n      }\n\n      // .end() was called, waiting on flush (finish event)\n      if (result.ending) {\n        await Promise.race([\n          errPromise.promise,\n          // TODO: do we need to wait on close? If slow end and destroy is\n          // called then what is emitted? close or finish?\n          closePromise.promise,\n          finishPromise.promise\n        ])\n        break\n      }\n\n      // If destroyed, race err & close to determine reason & then throw/break\n      if (writable.destroyed) {\n        await Promise.race([\n          errPromise.promise,\n          closePromise.promise\n        ])\n        break\n      }\n\n      if (result.done) {\n        writable.end()\n        await Promise.race([\n          errPromise.promise,\n          // TODO: do we need to wait on close? If slow end and destroy is\n          // called then what is emitted? close or finish?\n          closePromise.promise,\n          finishPromise.promise\n        ])\n        break\n      }\n\n      if (!writable.write(result.value)) {\n        drainPromise = defer()\n        await Promise.race([\n          errPromise.promise,\n          closePromise.promise,\n          finishPromise.promise,\n          drainPromise.promise\n        ])\n      }\n    }\n  } finally {\n    writable\n      .removeListener('error', errorHandler)\n      .removeListener('close', closeHandler)\n      .removeListener('finish', finishHandler)\n      .removeListener('drain', drainHandler)\n\n    // End the iterator if it is a generator\n    if (typeof source.return === 'function') {\n      await source.return()\n    }\n  }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/stream-to-it/sink.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/stream-to-it/sink.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}}],"sources":{"node_modules/stream-to-it/sink.js":"const getIterator = require('get-iterator')\nconst defer = require('p-defer')\n\nmodule.exports = writable => async source => {\n  source = getIterator(source)\n\n  const errPromise = defer()\n  const closePromise = defer()\n  const endingPromise = defer()\n  const finishPromise = defer()\n  let drainPromise\n\n  const errorHandler = err => errPromise.reject(err)\n  const closeHandler = () => closePromise.resolve({ closed: true })\n  const finishHandler = () => finishPromise.resolve({ finished: true })\n  const drainHandler = () => {\n    if (drainPromise) drainPromise.resolve({ drained: true })\n  }\n\n  // There's no event to determine the start of a call to .end()\n  const _end = writable.end.bind(writable)\n  writable.end = (...args) => {\n    endingPromise.resolve({ ending: true })\n    return _end(...args)\n  }\n\n  writable\n    .on('error', errorHandler)\n    .on('close', closeHandler)\n    .on('finish', finishHandler)\n    .on('drain', drainHandler)\n\n  const getNext = async () => {\n    try {\n      return source.next()\n    } catch (err) {\n      writable.destroy(err)\n      return errPromise.promise\n    }\n  }\n\n  try {\n    while (true) {\n      // Race the iterator and the error, close and finish listener\n      const result = await Promise.race([\n        errPromise.promise,\n        closePromise.promise,\n        endingPromise.promise,\n        finishPromise.promise,\n        getNext()\n      ])\n\n      if (result.closed || result.finished) {\n        break\n      }\n\n      // .end() was called, waiting on flush (finish event)\n      if (result.ending) {\n        await Promise.race([\n          errPromise.promise,\n          // TODO: do we need to wait on close? If slow end and destroy is\n          // called then what is emitted? close or finish?\n          closePromise.promise,\n          finishPromise.promise\n        ])\n        break\n      }\n\n      // If destroyed, race err & close to determine reason & then throw/break\n      if (writable.destroyed) {\n        await Promise.race([\n          errPromise.promise,\n          closePromise.promise\n        ])\n        break\n      }\n\n      if (result.done) {\n        writable.end()\n        await Promise.race([\n          errPromise.promise,\n          // TODO: do we need to wait on close? If slow end and destroy is\n          // called then what is emitted? close or finish?\n          closePromise.promise,\n          finishPromise.promise\n        ])\n        break\n      }\n\n      if (!writable.write(result.value)) {\n        drainPromise = defer()\n        await Promise.race([\n          errPromise.promise,\n          closePromise.promise,\n          finishPromise.promise,\n          drainPromise.promise\n        ])\n      }\n    }\n  } finally {\n    writable\n      .removeListener('error', errorHandler)\n      .removeListener('close', closeHandler)\n      .removeListener('finish', finishHandler)\n      .removeListener('drain', drainHandler)\n\n    // End the iterator if it is a generator\n    if (typeof source.return === 'function') {\n      await source.return()\n    }\n  }\n}\n"},"lineCount":113}},"error":null,"hash":"f40799c84b8c0a2d8917072abe463fe7","cacheData":{"env":{}}}