{"id":"../../node_modules/buffer-split/index.js","dependencies":[{"name":"/home/hamster/Learning/Node.js/js-libp2p/examples/libp2p-in-the-browser2/package.json","includedInParent":true,"mtime":1583765270259},{"name":"/home/hamster/Learning/Node.js/js-libp2p/node_modules/buffer-split/package.json","includedInParent":true,"mtime":1581972446598},{"name":"buffer-indexof","loc":{"line":1,"column":28},"parent":"/home/hamster/Learning/Node.js/js-libp2p/node_modules/buffer-split/index.js","resolved":"/home/hamster/Learning/Node.js/js-libp2p/node_modules/buffer-indexof/index.js"}],"generated":{"js":"var bufferIndexOf = require('buffer-indexof');\n\nmodule.exports = function(buf,splitBuf,includeDelim){\n  \n  var search = -1\n  , lines = []\n  , move = includeDelim?splitBuf.length:0\n  ;\n\n  while((search = bufferIndexOf(buf,splitBuf)) > -1){\n    lines.push(buf.slice(0,search+move));\n    buf = buf.slice(search+splitBuf.length,buf.length);\n  }\n\n  lines.push(buf);\n        \n  return lines;\n}\n\n\n\n\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/buffer-split/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/buffer-split/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/buffer-split/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/buffer-split/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/buffer-split/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/buffer-split/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/buffer-split/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/buffer-split/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/buffer-split/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/buffer-split/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/buffer-split/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/buffer-split/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/buffer-split/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/buffer-split/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/buffer-split/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/buffer-split/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/buffer-split/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/buffer-split/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/buffer-split/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/buffer-split/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/buffer-split/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/buffer-split/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/buffer-split/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}}],"sources":{"../../node_modules/buffer-split/index.js":"var bufferIndexOf = require('buffer-indexof');\n\nmodule.exports = function(buf,splitBuf,includeDelim){\n  \n  var search = -1\n  , lines = []\n  , move = includeDelim?splitBuf.length:0\n  ;\n\n  while((search = bufferIndexOf(buf,splitBuf)) > -1){\n    lines.push(buf.slice(0,search+move));\n    buf = buf.slice(search+splitBuf.length,buf.length);\n  }\n\n  lines.push(buf);\n        \n  return lines;\n}\n\n\n\n\n"},"lineCount":23}},"error":null,"hash":"99df0f67ef7a79b1c7d109de55c76ded","cacheData":{"env":{}}}