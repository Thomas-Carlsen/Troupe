(* scheduler-independent leak via blocking behavior *)
(* this is a nasty, nasty leak *)

let (* set secret to 0 or 1 *)
    val secret = 0 raisedTo {secret}
    
    fun wait () = rcv ({}, {secret}, authority, [ hn x => () ])
    fun signal p = send (p, ())

    val mainPid = self ()

    fun leak i = let val c = pinipush authority 
                     val _ = wait () 
                     val _ = pinipop c
                     val _ = adv i
                     val _ = print i                     
                     val _ = signal mainPid
                 in print "DONE"
                 end       

    (* uncomment to see that the secret is properly labelled *)
    (* val _ = adv secret  *)

    val _ = print secret

    val p1 = spawn ( fn () => leak 1 )
    val p2 = spawn ( fn () => leak 2 )    
    
    val (q1, q2) = if secret then (p1, p2) 
                                else (p2, p1)
                   
    val _ = signal q1 
    val _ = wait () 
    val _ = signal q2 

in () 
end
